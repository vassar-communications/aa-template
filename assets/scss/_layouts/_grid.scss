// consistency: have gap variables all named the same thing
// bs-gap is a Bootstrap thing. Don't design this to reference
// BS, since I'll have several different types of grids: regular, masonry,
// and vertical masonry.

.grid {
  @include break(md) {
    display: grid;
    gap: var(--bs-gap, 3rem);
    grid-template-columns: repeat(var(--bs-columns, 1), 1fr);

    &.cols-2 {
      --bs-columns: 2;
    }
    &.cols-3 {
      --bs-columns: 3;
    }
    &.cols-4 {
      --bs-columns: 4;
    }
  }
}

.items-equal-height {
  .g-col > * {
    height: 100%;
  }
}

.loose-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.grid--verticalMasonry {
//  gap: var(--bs-gap, 3rem);
  column-count: var(--vm-columns, 2);
  column-gap: var(--col-gap, 1rem);
  line-height: 0;

  .grid-item {
    display: inline-block;
    margin-bottom: var(--col-gap, 1rem);
//    margin-bottom: calc(var(--col-gap, 1rem) * 0.7);
  }

  &.cols-2 {
    --vm-columns: 2;
  }
  &.cols-3 {
    --vm-columns: 3;
  }
  &.cols-4 {
    --vm-columns: 4;
  }

}

//  todo: for consistency, change this to:
//  - grid--masonry rather than layout-masonry
//  - grid-item rather than masonry-item

.layout-masonry-33 {
  .masonry-item,
  .grid-sizer {
    margin-bottom: 10px;
    width: calc(33% - 10px);

    &.w-66 {
      width: 60%;
    }

  }
}




@include break(md) {
  .cols-6 .section-content,
  .cols-6.row {
    grid-template-columns: repeat(6, 1fr);
  }
  .span-1 {
    grid-column: span 2;
  }
  .span-2 {
    grid-column: span 3;
  }
  .span-6 {
    grid-column: span 6;
  }
  .cols-6 .section-content {
    grid-template-columns: 1fr;
  }
}
